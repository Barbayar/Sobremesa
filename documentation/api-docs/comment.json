{
    "basePath": "/api/v1",
    "swaggerVersion": "1.2",
    "apiVersion": "1.0.0",
    "resourcePath": "comment",
    "apis": [
        {
            "path": "/lunch/{lunchId}/comment",
            "operations": [
                {
                    "method": "POST",
                    "summary": "updates a comment",
                    "nickname": "post",
                    "type": "boolean",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "lunchId",
                            "type": "integer",
                            "required": true,
                            "description": "lunch id"
                        },
                        {
                            "paramType": "query",
                            "name": "commentId",
                            "type": "integer",
                            "required": true,
                            "description": "comment id"
                        },
                        {
                            "paramType": "query",
                            "name": "content",
                            "type": "string",
                            "required": true,
                            "description": "new comment"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "invalid parameters"
                        },
                        {
                            "code": 401,
                            "message": "not logged in"
                        },
                        {
                            "code": 403,
                            "message": "has no permission"
                        },
                        {
                            "code": 404,
                            "message": "invalid lunch id or comment id"
                        },
                        {
                            "code": 500,
                            "message": "an internal error occured"
                        }
                    ],
                    "notes": "returns always true"
                },
                {
                    "method": "PUT",
                    "summary": "adds a new comment",
                    "nickname": "put",
                    "type": "integer",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "lunchId",
                            "type": "integer",
                            "required": true,
                            "description": "lunch id"
                        },
                        {
                            "paramType": "query",
                            "name": "content",
                            "type": "string",
                            "required": true,
                            "description": "comment"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "invalid parameters"
                        },
                        {
                            "code": 401,
                            "message": "not logged in"
                        },
                        {
                            "code": 404,
                            "message": "invalid lunch id"
                        },
                        {
                            "code": 500,
                            "message": "an internal error occured"
                        }
                    ],
                    "notes": "returns comment id"
                },
                {
                    "method": "DELETE",
                    "summary": "deletes a comment",
                    "nickname": "delete",
                    "type": "boolean",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "lunchId",
                            "type": "integer",
                            "required": true,
                            "description": "lunch id"
                        },
                        {
                            "paramType": "query",
                            "name": "commentId",
                            "type": "integer",
                            "required": true,
                            "description": "comment id"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "invalid parameters"
                        },
                        {
                            "code": 401,
                            "message": "not logged in"
                        },
                        {
                            "code": 403,
                            "message": "has no permission"
                        },
                        {
                            "code": 404,
                            "message": "invalid lunch id or comment id"
                        },
                        {
                            "code": 500,
                            "message": "an internal error occured"
                        }
                    ],
                    "notes": "returns always true"
                }
            ]
        },
        {
            "path": "/lunch/{lunchId}/comment/all",
            "operations": [
                {
                    "method": "GET",
                    "summary": "gets all comments",
                    "nickname": "getAll",
                    "type": "array",
                    "items": {
                        "$ref": "Comment"
                    },
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "lunchId",
                            "type": "integer",
                            "required": true,
                            "description": "lunch id"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "invalid parameters"
                        },
                        {
                            "code": 401,
                            "message": "not logged in"
                        },
                        {
                            "code": 404,
                            "message": "invalid lunch id"
                        },
                        {
                            "code": 500,
                            "message": "an internal error occured"
                        }
                    ],
                    "notes": "returns list of comments"
                }
            ]
        }
    ],
    "models": {
        "Comment": {
            "id": "Comment",
            "properties": {
                "commentId": {
                    "description": "comment id",
                    "type": "integer"
                },
                "content": {
                    "description": "comment",
                    "type": "string"
                },
                "createdTime": {
                    "description": "created time in unix timestamp",
                    "type": "integer"
                },
                "userId": {
                    "description": "author's user id",
                    "type": "integer"
                },
                "displayName": {
                    "description": "author's display name",
                    "type": "string"
                },
                "data": {
                    "description": "author's other data",
                    "type": "string"
                }
            },
            "required": [
                "commentId",
                "content",
                "createdTime",
                "data",
                "displayName",
                "userId"
            ]
        }
    }
}